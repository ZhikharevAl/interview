"DESCRIPTION","DURATION IN MS","NAME","PARENT SUITE","START TIME","STATUS","STOP TIME","SUB SUITE","SUITE","TEST CLASS","TEST METHOD"
"Test getting questions from a category with no questions.","16","test_get_questions_empty_category","tests.e2e","Mon Sep 29 20:12:47 GMT 2025","passed","Mon Sep 29 20:12:47 GMT 2025","TestQuestionsAPI","test_questions_api","",""
"Test that health endpoint returns correct status.","14","test_health_endpoint","tests.e2e","Mon Sep 29 20:12:47 GMT 2025","passed","Mon Sep 29 20:12:47 GMT 2025","TestHealthCheck","test_health","",""
"An update test for a non-existent category should return a 404.","7","Test updating a non-existent category","tests.integration","Mon Sep 29 20:12:47 GMT 2025","passed","Mon Sep 29 20:12:47 GMT 2025","TestCategoriesIntegration","test_categories_integration","",""
"Test successful question creation.","7","Test successful question creation","tests.integration","Mon Sep 29 20:12:47 GMT 2025","passed","Mon Sep 29 20:12:47 GMT 2025","TestQuestionsIntegration","test_questions_integration","",""
"A test for the successful deletion of a category.","40","test_delete_category","tests.e2e","Mon Sep 29 20:12:47 GMT 2025","passed","Mon Sep 29 20:12:47 GMT 2025","TestCategoriesAPI","test_categories_api","",""
"Test getting all questions.","22","Test getting a list of all questions","tests.integration","Mon Sep 29 20:12:48 GMT 2025","passed","Mon Sep 29 20:12:48 GMT 2025","TestQuestionsIntegration","test_questions_integration","",""
"Test getting questions by category.","8","Test filtering questions by category","tests.unit","Mon Sep 29 20:12:48 GMT 2025","passed","Mon Sep 29 20:12:48 GMT 2025","TestQuestionService","test_question_service","",""
"Test creating a new question.","4","Test creating a new question successfully","tests.unit","Mon Sep 29 20:12:48 GMT 2025","passed","Mon Sep 29 20:12:48 GMT 2025","TestQuestionService","test_question_service","",""
"Test that root endpoint is accessible.","13","test_root_endpoint","tests.e2e","Mon Sep 29 20:12:47 GMT 2025","passed","Mon Sep 29 20:12:47 GMT 2025","TestHealthCheck","test_health","",""
"Test updating a non-existent question returns None.","1","Test updating a non-existent question","tests.unit","Mon Sep 29 20:12:48 GMT 2025","passed","Mon Sep 29 20:12:48 GMT 2025","TestQuestionService","test_question_service","",""
"Test for successful retrieval of a question by ID.","13","test_read_question_by_id","tests.e2e","Mon Sep 29 20:12:47 GMT 2025","passed","Mon Sep 29 20:12:47 GMT 2025","TestQuestionsAPI","test_questions_api","",""
"Test deleting a non-existent category returns None.","1","Test deleting a non-existent category","tests.unit","Mon Sep 29 20:12:48 GMT 2025","passed","Mon Sep 29 20:12:48 GMT 2025","TestCategoryService","test_category_service","",""
"Test for getting 404 errors when requesting a non-existent category.","12","test_read_nonexistent_category","tests.e2e","Mon Sep 29 20:12:47 GMT 2025","passed","Mon Sep 29 20:12:47 GMT 2025","TestCategoriesAPI","test_categories_api","",""
"Test that creating duplicate question fails.","12","Test failure when creating a duplicate question","tests.integration","Mon Sep 29 20:12:48 GMT 2025","passed","Mon Sep 29 20:12:48 GMT 2025","TestQuestionsIntegration","test_questions_integration","",""
"The deletion test for a non-existent category should return a 404.","6","Test deleting a non-existent category","tests.integration","Mon Sep 29 20:12:47 GMT 2025","passed","Mon Sep 29 20:12:47 GMT 2025","TestCategoriesIntegration","test_categories_integration","",""
"Test retrieving all questions without filters.","15","test_get_all_questions","tests.e2e","Mon Sep 29 20:12:47 GMT 2025","passed","Mon Sep 29 20:12:47 GMT 2025","TestQuestionsAPI","test_questions_api","",""
"Test getting question by ID.","4","Test getting a single question by its ID","tests.integration","Mon Sep 29 20:12:48 GMT 2025","passed","Mon Sep 29 20:12:48 GMT 2025","TestQuestionsIntegration","test_questions_integration","",""
"Test updating non-existent question returns 404.","6","Test updating a non-existent question","tests.integration","Mon Sep 29 20:12:48 GMT 2025","passed","Mon Sep 29 20:12:48 GMT 2025","TestQuestionsIntegration","test_questions_integration","",""
"Test getting question by text is case insensitive.","4","Test getting a question by text is case-insensitive","tests.unit","Mon Sep 29 20:12:48 GMT 2025","passed","Mon Sep 29 20:12:48 GMT 2025","TestQuestionService","test_question_service","",""
"Test getting categories with pagination.","7","Test getting categories with pagination","tests.unit","Mon Sep 29 20:12:48 GMT 2025","passed","Mon Sep 29 20:12:48 GMT 2025","TestCategoryService","test_category_service","",""
"Test getting all categories.","5","Test getting a list of all categories","tests.unit","Mon Sep 29 20:12:48 GMT 2025","passed","Mon Sep 29 20:12:48 GMT 2025","TestCategoryService","test_category_service","",""
"Test updating a question.","10","Test successful question update","tests.integration","Mon Sep 29 20:12:48 GMT 2025","passed","Mon Sep 29 20:12:48 GMT 2025","TestQuestionsIntegration","test_questions_integration","",""
"Test getting a non-existent category by name returns None.","1","Test getting a non-existent category by name","tests.unit","Mon Sep 29 20:12:48 GMT 2025","passed","Mon Sep 29 20:12:48 GMT 2025","TestCategoryService","test_category_service","",""
"
Test for successful retrieval of a category by ID.

The `managed_category` fixture provides the ID of an already created category.
","15","test_read_category_by_id","tests.e2e","Mon Sep 29 20:12:47 GMT 2025","passed","Mon Sep 29 20:12:47 GMT 2025","TestCategoriesAPI","test_categories_api","",""
"The test of successful category creation.","25","Test successful category creation","tests.integration","Mon Sep 29 20:12:47 GMT 2025","passed","Mon Sep 29 20:12:47 GMT 2025","TestCategoriesIntegration","test_categories_integration","",""
"Test updating a category.","4","Test updating an existing category","tests.unit","Mon Sep 29 20:12:48 GMT 2025","passed","Mon Sep 29 20:12:48 GMT 2025","TestCategoryService","test_category_service","",""
"A test for successfully deleting a category.","11","Test successful category deletion","tests.integration","Mon Sep 29 20:12:47 GMT 2025","passed","Mon Sep 29 20:12:47 GMT 2025","TestCategoriesIntegration","test_categories_integration","",""
"Test getting non-existent question returns 404.","6","Test getting a non-existent question","tests.integration","Mon Sep 29 20:12:48 GMT 2025","passed","Mon Sep 29 20:12:48 GMT 2025","TestQuestionsIntegration","test_questions_integration","",""
"Test getting a category by name is case insensitive.","3","Test getting a category by name is case-insensitive","tests.unit","Mon Sep 29 20:12:48 GMT 2025","passed","Mon Sep 29 20:12:48 GMT 2025","TestCategoryService","test_category_service","",""
"Test deleting a question.","11","Test successful question deletion","tests.integration","Mon Sep 29 20:12:48 GMT 2025","passed","Mon Sep 29 20:12:48 GMT 2025","TestQuestionsIntegration","test_questions_integration","",""
"Test deleting a category.","4","Test deleting an existing category","tests.unit","Mon Sep 29 20:12:48 GMT 2025","passed","Mon Sep 29 20:12:48 GMT 2025","TestCategoryService","test_category_service","",""
"Test for the successful creation of a question.","21","test_create_question","tests.e2e","Mon Sep 29 20:12:47 GMT 2025","passed","Mon Sep 29 20:12:47 GMT 2025","TestQuestionsAPI","test_questions_api","",""
"Test updating a question.","4","Test updating an existing question","tests.unit","Mon Sep 29 20:12:48 GMT 2025","passed","Mon Sep 29 20:12:48 GMT 2025","TestQuestionService","test_question_service","",""
"Test updating question's category.","12","Test updating a question's category","tests.integration","Mon Sep 29 20:12:48 GMT 2025","passed","Mon Sep 29 20:12:48 GMT 2025","TestQuestionsIntegration","test_questions_integration","",""
"Test deleting a question.","4","Test deleting an existing question","tests.unit","Mon Sep 29 20:12:48 GMT 2025","passed","Mon Sep 29 20:12:48 GMT 2025","TestQuestionService","test_question_service","",""
"Test getting a question by ID.","5","Test getting an existing question by ID","tests.unit","Mon Sep 29 20:12:48 GMT 2025","passed","Mon Sep 29 20:12:48 GMT 2025","TestQuestionService","test_question_service","",""
"A test of a successful category update.","10","Test successful category update","tests.integration","Mon Sep 29 20:12:47 GMT 2025","passed","Mon Sep 29 20:12:47 GMT 2025","TestCategoriesIntegration","test_categories_integration","",""
"Test getting a category by name.","3","Test getting a category by its name","tests.unit","Mon Sep 29 20:12:48 GMT 2025","passed","Mon Sep 29 20:12:48 GMT 2025","TestCategoryService","test_category_service","",""
"Test updating a non-existent category returns None.","2","Test updating a non-existent category","tests.unit","Mon Sep 29 20:12:48 GMT 2025","passed","Mon Sep 29 20:12:48 GMT 2025","TestCategoryService","test_category_service","",""
"Test deleting a non-existent question returns None.","2","Test deleting a non-existent question","tests.unit","Mon Sep 29 20:12:48 GMT 2025","passed","Mon Sep 29 20:12:48 GMT 2025","TestQuestionService","test_question_service","",""
"Test partial update of question.","3","Test partial update of a question","tests.unit","Mon Sep 29 20:12:48 GMT 2025","passed","Mon Sep 29 20:12:48 GMT 2025","TestQuestionService","test_question_service","",""
"Test getting a category by ID.","3","Test getting an existing category by ID","tests.unit","Mon Sep 29 20:12:48 GMT 2025","passed","Mon Sep 29 20:12:48 GMT 2025","TestCategoryService","test_category_service","",""
"A test that verifies the impossibility of creating a duplicate category.","15","Test failure when creating a duplicate category","tests.integration","Mon Sep 29 20:12:47 GMT 2025","passed","Mon Sep 29 20:12:47 GMT 2025","TestCategoriesIntegration","test_categories_integration","",""
"Test getting questions by category.","31","Test filtering questions by category ID","tests.integration","Mon Sep 29 20:12:48 GMT 2025","passed","Mon Sep 29 20:12:48 GMT 2025","TestQuestionsIntegration","test_questions_integration","",""
"Test deleting non-existent question returns 404.","6","Test deleting a non-existent question","tests.integration","Mon Sep 29 20:12:48 GMT 2025","passed","Mon Sep 29 20:12:48 GMT 2025","TestQuestionsIntegration","test_questions_integration","",""
"Test getting all questions.","5","Test getting a list of all questions","tests.unit","Mon Sep 29 20:12:48 GMT 2025","passed","Mon Sep 29 20:12:48 GMT 2025","TestQuestionService","test_question_service","",""
"The test for getting a non-existent category should return a 404.","7","Test getting a non-existent category","tests.integration","Mon Sep 29 20:12:47 GMT 2025","passed","Mon Sep 29 20:12:47 GMT 2025","TestCategoriesIntegration","test_categories_integration","",""
"Test creating a new category.","4","Test creating a new category successfully","tests.unit","Mon Sep 29 20:12:48 GMT 2025","passed","Mon Sep 29 20:12:48 GMT 2025","TestCategoryService","test_category_service","",""
"Test successful deletion of a question.","44","test_delete_question","tests.e2e","Mon Sep 29 20:12:47 GMT 2025","passed","Mon Sep 29 20:12:47 GMT 2025","TestQuestionsAPI","test_questions_api","",""
"Test getting a non-existent question returns None.","1","Test getting a non-existent question by ID","tests.unit","Mon Sep 29 20:12:48 GMT 2025","passed","Mon Sep 29 20:12:48 GMT 2025","TestQuestionService","test_question_service","",""
"Test getting a non-existent category returns None.","1","Test getting a non-existent category by ID","tests.unit","Mon Sep 29 20:12:48 GMT 2025","passed","Mon Sep 29 20:12:48 GMT 2025","TestCategoryService","test_category_service","",""
"A cascade deletion test for questions when deleting a category.","22","Test cascade deletion of questions when a category is deleted","tests.integration","Mon Sep 29 20:12:47 GMT 2025","passed","Mon Sep 29 20:12:47 GMT 2025","TestCategoriesIntegration","test_categories_integration","",""
"Test partial update of category.","2","Test partial update of a category","tests.unit","Mon Sep 29 20:12:48 GMT 2025","passed","Mon Sep 29 20:12:48 GMT 2025","TestCategoryService","test_category_service","",""
"Test getting non-existent question by text returns None.","2","Test getting a non-existent question by text","tests.unit","Mon Sep 29 20:12:48 GMT 2025","passed","Mon Sep 29 20:12:48 GMT 2025","TestQuestionService","test_question_service","",""
"The test of getting a category by ID.","5","Test getting a category by its ID","tests.integration","Mon Sep 29 20:12:47 GMT 2025","passed","Mon Sep 29 20:12:47 GMT 2025","TestCategoriesIntegration","test_categories_integration","",""
