[project]
name = "interview"
version = "0.1.0"
description = ""
readme = "README.md"
requires-python = ">=3.13.5"
dependencies = []

[dependency-groups]
dev = [
    "fastapi>=0.116.1",
    "pre-commit>=4.3.0",
    "psycopg2-binary>=2.9.10",
    "pydantic>=2.11.7",
    "pydantic-settings>=2.10.1",
    "pylint>=3.3.8",
    "pyright>=1.1.404",
    "python-dotenv>=1.1.1",
    "ruff>=0.12.10",
    "sqlalchemy>=2.0.43",
    "uvicorn>=0.35.0",
]
test = [
    "allure-pytest>=2.15.0",
    "httpx>=0.28.1",
    "pytest>=8.4.1",
    "pytest-asyncio>=1.1.0",
    "pytest-cov>=6.2.1",
    "pytest-playwright>=0.7.0",
]

[tool.ruff]
line-length = 100
target-version = "py313"

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "D203",   # one-blank-line-before-class
    "D212",   # multi-line-summary-first-line
    "D100",   # missing-docstring-in-public-module
    "COM812", # missing-trailing-comma
    "ISC001", # single-line-implicit-string-concatenation
    "S105",   # hard-coded password (если используете)
    "S101",   # assert statements
]

[tool.logging]
version = 1
disable_existing_loggers = false

[tool.logging.formatters.default]
format = "%(asctime)s - %(name)s - %(levelname)s - %(message)s"
datefmt = "%Y-%m-%d %H:%M:%S"

[tool.logging.formatters.detailed]
format = "%(asctime)s [%(levelname)s] %(name)s:%(lineno)d - %(message)s"
datefmt = "%Y-%m-%d %H:%M:%S"

[tool.logging.handlers.console]
class = "logging.StreamHandler"
level = "INFO"
formatter = "default"
stream = "ext://sys.stdout"

[tool.logging.handlers.file]
class = "logging.FileHandler"
filename = "app.log"
level = "DEBUG"
formatter = "detailed"

[tool.logging.loggers.app]
handlers = ["console", "file"]
level = "DEBUG"
propagate = false

[tool.logging.loggers.uvicorn]
handlers = ["console"]
level = "INFO"
propagate = false

[tool.logging.loggers."sqlalchemy.engine"]
handlers = ["console", "file"]
level = "WARNING"
propagate = false

[tool.logging.root]
handlers = ["console"]
level = "INFO"

fixable = ["ALL"]

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401", "D104"]

[tool.ruff.lint.isort]
known-third-party = ["fastapi", "uvicorn"]

[tool.ruff.lint.pylint]
max-args = 7
max-returns = 3
max-statements = 50
max-branches = 12


[tool.pyright]
exclude = [".venv", "**/__pycache__"]
pythonVersion = "3.13"
venvPath = "."
venv = ".venv"

[tool.pylint.MASTER]
init-hook = 'import sys; sys.path.append("backend")'

[tool.pylint."MESSAGES CONTROL"]
disable = ["missing-docstring", "too-few-public-methods", "redefined-outer-name"]

[tool.pylint.FORMAT]
max-line-length = 100

[tool.pytest.ini_options]
asyncio_mode = "auto"
pythonpath = ["backend"]
